<?xml version="1.0"?>
<launch>
    <arg name="run_bag" default="false" />
    <arg name="namespace_prefix" default="robot1" />

    <arg name="map_directory" default="<path to maps>/icra-kitti" />
    <arg name="map_prefix" default="" />
    <arg name="ndt_om" default="true" />
    <arg name="only_static" default="false" />
    <arg name="cluster_update" default="false" />
    <arg name="color" default="6" />
    <arg name="request_scans" default="false" />
    <arg name="scan_service" default="/kitti_publisher/publish" />
    <!-- Include visualization in rviz -->
    <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d
    <path to code>/src/lamide/rviz/lamide-fuser.rviz" /> -->


    <!-- launch-prefix="gdb -ex run /-/-args" -->

    <!-- start mapping node -->
    <node pkg="graph_map_lamide" type="graph_map_lamide_fuser_node" name="graph_node_lamide"
        output="screen" required="true">
        <!-- <node pkg="graph_map" type="graph_map_fuser_node" name="graph_node" output="screen"> -->

        <!-- !important -->
        <param name="request_scans" value="$(arg request_scans)" />
        <param name="scan_service" value="$(arg scan_service)" />
        <!-- !important -->

        <param name="positive_update_static" value="0.6" />
        <param name="negative_update_static" value="0.4" />
        <param name="eta_static" value="0.2" />
        <param name="positive_update_dynamic" value="0.6" />
        <param name="negative_update_dynamic" value="0.4" />
        <param name="eta_dynamic" value="0.2" />
        <param name="max_occupancy" value="255.0" />
        <param name="sensor_noise" value="0.06" />
        <param name="maxNumPoints" value="10000" />
        <param name="w_own" value="1.0" />
        <param name="w_cluster" value="1.0" />
        <param name="cluster_update" value="$(arg cluster_update)" />

        <!-- Choose weather to initiate pose to pose_init_<x,y,t> or the data of /<gt_topic> -->
        <param name="initPoseFromGT" value="false" />
        <param name="pose_init_x" value="0" />
        <param name="pose_init_y" value="0" />
        <param name="pose_init_t" value="0" />
        <param name="world_link_id" value="map" />

        <!-- unknown -->
        <!-- position:
      x: 249.863675693
      y: 68.6525009442
      z: 1.83083605766
    orientation:
      x: 0.0215665732178
      y: 0.0300472594805
      z: -0.994897398574
      w: 0.0938680532897 -->

        <!-- Select mapping technique to one of the methods listed in
        graph_map/include/graph_factory.h -->
        <param name="map_type" value="ndt_map" />
        <param name="ndt_om" value="true" />

        <!-- save as jff -->
        <param name="file_format_map" value=".MAP" />

        <!-- Select registration technique to one of the methods listed in
        graph_map/include/graph_factory.h -->
        <param name="registration_type" value="ndt_d2d_reg_lamide" />


        <!-- use local maps instead of
        a single map, this can improve map descriptiveness -->
        <param name="use_submap" value="true" />
        <param name="interchange_radius" value="50" />
        <param name="compound_radius" value="10" />
        <param name="map_switching_method" value="node_position_sg" />

        <!-- size of map -->
        <param name="size_x_meters" value="200" />
        <param name="size_y_meters" value="200" />
        <param name="size_z_meters" value="10" />


        <!-- choose to disable essential parts of the software -->
        <param name="enable_registration" value="true" />
        <param name="registration_2D" value="false" />

        <!-- Use fine to course ndt_cells in registration -->
        <param name="multi-res" value="false" />
        <param name="enable_mapping" value="true" />


        <!-- if laser_2d is true, a 2d scanner will be used for mapping-->
        <param name="laser_2d" value="false" />

        <!-- Topic of laser scanner -->
        <param name="points_topic" value="/velodyne_points" />
        <param name="output_pointcloud_topic_name" value="/fused_cloud" />

        <param name="odometry_topic" value="/odom" />
        <param name="use_odometry_message" value="false" />
        <param name="use_tf_listener" value="true" />
        <param name="publish_laser_link" value="true" />
        <param name="use_REP_convention" value="false" />
        <!-- this is for debug -->
        <param name="use_odom_as_gt" value="true" />

        <param name="odom_tf" value="/odom" />
        <param name="base_tf" value="/base_link" />
        <param name="relative_movement" value="true" />
        <param name="laser_frame_id" value="/velodyne" />

        <param name="gt_topic" value="$(arg namespace_prefix)/kmo_navserver/state" />

        <!-- check if the registration pose output is similar to odometry prediction within
        max_translation_norm or max_rotation_norm, otherwise reject -->
        <param name="check_consistency" value="false" />
        <param name="max_translation_norm" value="5.0" />
        <param name="max_rotation_norm" value="0.5" />


        <!-- ██████╗ ███████╗███████╗
             ██╔══██╗██╔════╝██╔════╝
             ██████╔╝█████╗  ███████╗
             ██╔══██╗██╔══╝  ╚════██║
             ██║  ██║███████╗███████║
             ╚═╝  ╚═╝╚══════╝╚══════╝
                                 -->
        <!-- Resolution of a map, usually between 0.4 and 1.2 -->
        <param name="resolution" value="0.6" />
        <param name="n_neighbours" value="1" />

        <!--<param name="laser_variance_z" value="0.02" /> -->

        <!--range of sensor, min range can prevent self-mapping of the robot or operator of the lidar, max range can remove uncertain measurments -->
        <param name="max_range" value="120.0" />
        <param name="min_range" value="2.5" />

        <!-- Specific sensor offset parameters with respect to the odometry frame -->
        <!-- G/01 LiDAR x 0.175 m
        G/01 LiDAR y 0.025 m
        G/01 LiDAR z 0.48 m
        G/01 LiDAR φ −0.017 rad (roll)
        G/01 LiDAR θ −0.012 rad (pitch)
        G/01 LiDAR ψ −0.04 rad (yaw)-->

        <!-- oxford left -0.60072 -0.34077 -0.26837 -0.0053948 -0.041998 -3.1337 -->

        <!-- 1.5707963 -->
        <!-- the eulers are XYZ here -->

        <!-- kitti
        r = 0.014825
        p = 0.014824
        y = -7.8540e-04
        T = -0.80868 0.31956 -0.79972 -->
        <!-- <param name="sensor_pose_x" value="-0.80868" />
        <param name="sensor_pose_y" value="0.31956" />
        <param name="sensor_pose_z" value="-0.79972" />
        <param name="sensor_pose_r" value="0.014825" />
        <param name="sensor_pose_p" value="0.014825" />
        <param name="sensor_pose_t" value="-7.8540e-04" />
        <param name="sensor_offset_t" value="0.0" /> -->

        <!-- inverse kitti
        ri = -0.014824
        pi = -0.014822
        yi = 7.5531e-04
        T = 0.81054 -0.30705 0.80272 -->
        <param name="sensor_pose_x" value="0.81054" />
        <param name="sensor_pose_y" value="-0.30705" />
        <param name="sensor_pose_z" value="0.80272" />
        <param name="sensor_pose_r" value="-0.014824" />
        <param name="sensor_pose_p" value="-0.014822" />
        <param name="sensor_pose_t" value="7.5531e-04" />
        <param name="sensor_offset_t" value="0.0" />

        <!-- Output directory where the map is stored -->
        <!-- invoke rosservice call /graph_ -->
        <param name="map_directory" value="$(arg map_directory)" />
        <param name="map_prefix" value="$(arg map_prefix)" />

        <!-- !! -->
        <!-- Coloring:
        0: single
        1: standard
        2: cluster
        3: update
        4: occupancy
        5: membership
        6: dynamics -->
        <param name="color" value="$(arg color)" />
        <param name="visualize" value="true" />
        <param name="T_map" value="1.0" />

        <!-- a minimum movement is required before fusing frames -->
        <param name="use_keyframe" value="true" />
        <param name="min_keyframe_dist" value="0.1" />
        <param name="min_keyframe_rot_deg" value="1.0" />
    </node>

    <!-- start a rosbag -->
    <group if="$(arg run_bag)">
        <arg name="path" default="<path to bags>/" />
        <arg name="file_1" default="all-tf.bag" />
        <node pkg="rosbag" type="play" name="player" output="screen"
            args="--clock -r 0.1 -q $(arg path)$(arg file_1)" />
    </group>


</launch>
